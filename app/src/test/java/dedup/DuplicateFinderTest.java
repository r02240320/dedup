/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dedup;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;
import static org.junit.Assert.assertTrue;

import java.io.IOException;
import java.nio.file.Path;

import org.junit.Before;
import org.junit.Test;

public class DuplicateFinderTest {

    DuplicateFinder driver;

    Path iconPath;

    @Before
    public void setUp() throws Exception {
        driver = new DuplicateFinder();
        iconPath = Path.of(getClass().getResource("icons").toURI());
    }

    @Test
    public void shouldFindDuplicatesUsingThreading() throws Exception {
        var res = driver.getDuplicates(iconPath, true);
        assertEquals(4, res.size());
    }

    @Test
    public void shouldFindDuplicatesUsingNonThreading() throws Exception {
        var res = driver.getDuplicates(iconPath, false);
        assertEquals(4, res.size());
    }

    @Test
    public void shouldThrowErrorOnFile() throws Exception {
        assertThrows(IOException.class, () -> {
            var icon = Path.of(iconPath.toString(), "uu.png");
            driver.getDuplicates(icon, false);
        });
    }

    @Test
    public void shouldBeTheSame() throws Exception {
        var file1 = Path.of(iconPath.toString(), "uu.gif");
        var file2 = Path.of(iconPath.toString(), "uuencoded.gif");
        assertTrue(FileChecksum.isSameFile(file1, file2));
    }

    @Test
    public void shouldThrowErrorOnNull() throws Exception {
        assertThrows(NullPointerException.class, () -> {
            driver.getDuplicates(null, false);
        });
    }

}
